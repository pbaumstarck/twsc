
var node = typeof module != "undefined" && module;

if (node) {
  var $$ = require('mst'),
    WatchRecord = require('./watchrecord.js').WatchRecord;
}

/**
 * Parses a concatenated list of show watch records.
 * @param {string} value All the stuff to parse.
 * @return {!Array.<!WatchRecord>} All the individual watch records.
 */
function parseShowRecords(value) {
  var ret = [];
  var ix = -1;
  while ((ix = value.indexOf("^^^", ix + 1)) != -1) {
    var ix2 = value.indexOf("$$$", ix + 3);
    if (ix2 == -1) {
      break;
    }
    var segments = value.substring(ix + 3, ix2).
      replace(/(^\s+|\s+$)/g, "").
      split(/\s+\:\:\s+/),
      obj;
    if (segments.length == 1) {
      // The thing name is just the first thing
      var match = segments[0].match(/^\S+/);
      obj = {
        show: match[0],
        body: segments[0].substr(match.index + match[0].length)
      };
    } else if (segments.length == 2) {
      // A multi-word show name or something
      obj = {
        show: segments[0],
        body: segments[1]
      };
    } else {
      // A multi-word show name with BTW sections
      obj = {
        show: segments[0],
        btws: segments.slice(1, segments.length - 1),
        body: segments[segments.length - 1]
      };
    }
    // Look for '::' delimiters
    var record = new WatchRecord();
    record.addWatches(obj);
    ret.push(record);
  }
  return ret;
}

if (node) {
  // var testValue = "Key: R - By (R)andom selection Q - By re(Q)uest T - By total viewing walk(T)hrough   1 - 2013.2.6...  ^^^ MST3K 101 - 2013.2.6T1 102 - 2013.2.6T1 103 - 2013.2.7T1 104 - 2013.2.7T1 105 - 2013.2.8T1 106 - 2013.2.8T1 107 - 2013.2.11T1 108 - 2013.2.11T1 109 - 2013.2.11T1 110 - 2013.2.11T1 111 - 2013.2.12T1 112 - 2013.2.12T1 113 - 2013.2.12T1 201 - 2013.2.13T1 202 - 2013.2.13T1 203 - 2013.2.13T1 204 - 2013.2.14T1 205 - 2013.2.14T1 206 - 2013.2.15T1 207 - 2013.2.19T1, 2013.2.25Q 208 - 2013.2.19T1 209 - 2013.2.19T1 210 - 2013.2.20T1 211 - 2013.2.20T1 212 - 2013.2.22T1, 2013.3.15Q 213 - 2013.2.25T1 301 - 2013.2.22Q, 2013.2.27T1 302 - 2013.2.27T1 303 - 2013.2.27T1 304 - 2013.2.27T1 305 - 2013.3.1T1 306 - 2013.3.1T1 307 - 2013.2.15R, 2013.3.4T1 308 - 2013.3.4T1 309 - 2013.3.5T1 310 - 2013.3.6T1 311 - 2013.3.6T1 312 - 2013.3.6T1 313 - 2013.3.6T1 314 - 2013.3.7T1 315 - 2013.3.8T1 316 - 2013.3.8T1 317 - 2013.2.11R, 2013.3.8T1 318 - 2013.3.11T1 319 - 2013.3.11T1 320 - 2013.3.13T1 321 - 2013.3.13T1 322 - 2013.3.13T1 323 - 2013.3.14T1 324 - 2013.3.14T1 401 - 2013.3.14T1 402 - 2013.3.15T1 403 - 2013.3.15T1 404 - 2013.3.18T1 405 - 2013.3.18T1 406 - 2013.3.18T1 407 - 2013.3.21T1 408 - 2013.3.22T1 409 - 2013.3.22T1 410 - 2013.3.22T1 411 - 2013.3.22T1 412 - 2013.3.25T1 413 - 2013.3.25T1 414 - 2013.3.25T1 415 - 2013.3.4R, 2013.3.26T1 416 - 2013.3.26T1 417 - 2013.3.26T1 418 - 2013.3.27T1 419 - 2013.3.27T1 420 - 2013.3.27T1 421 - 2013.2.26R, 2013.3.28T1 422 - 2013.3.28T1 423 - 2013.3.29T1 424 - 2013.3.29T1 501 - 2013.3.29T1 502 - 2013.3.29T1 503 -  504 - 505 - 506 - 507 - 508 - 509 - 510 - 511 - 512 - 513 - 514 - 515 - 2013.3.19R 516 - 517 - 518 - 519 - 520 - 521 - 522 - 523 - 524 - 601 - 602 - 603 - 2013.2.25R 604 - 2013.3.20R 605 - 606 - 2013.2.25R 607 - 608 - 609 - 610 - 611 - 612 - 2013.2.20Q 613 - 2013.2.12R 614 - 615 - 616 - 617 - 618 - 619 - 2013.3.19R 620 - 621 - 622 - 623 - 2013.2.4R 624 - M01 - 701 - 702 - 703 - 704 - 705 - 706 - 707 - 801 - 802 - 2013.3.31R... 803 - 804 - 805 - 2013.3.20R 806 - 807 - 808 - 809 - 810 - 811 - 812 - 2013.3.4R 813 - 814 - 815 - 816 - 817 - 2013.3.29Q... 818 - 819 - 820 - 821 - 2013.3.20R 822 - 901 - 902 - 903 - 2013.3.20R 904 - 905 - 906 - 907 - 908 - 909 - 910 - 911 - 912 - 2013.3.15Q 913 - 2013.2.22R 1001 - 1002 - 1003 - 1004 - 1005 - 2013.2.13R 1006 - 1007 - 1008 - 1009 - 1010 - 1011 - 2013.2.15R 1012 - 1013 - $$$  ^^^ TFC KFS - 2013.2.19Q, 2013.2.20Q $$$  ^^^ Friends :: Paul :: 101 - 2013.3.17T3 102 - 2013.3.20T3 â€¦ 908 - 2013.3.15T1 909 - 2013.3.15T1 910 - 2013.3.16T1 911 - 2013.3.16T1 912 - 2013.3.17T1 913 - 2013.3.18T1 914 - 2013.3.18T1 915 - 2013.3.19T1 916 - 2013.3.19T1 917 - 2013.3.20T1 918 - 2013.3.20T1 919 - 2013.3.21T1 920 - 2013.3.22T1 921 - 2013.3.22T1 922 - 2013.3.22T1 923 - 2013.3.22T1 924 - 2013.3.23T1 925 - 2013.3.23T1 1001 - 2013.3.23T1 1002 - 2013.3.23T1 1003 - 2013.3.25T1 1004 - 2013.3.25T1 1005 - 2013.3.26T1 1006 - 2013.3.26T1 1007 - 2013.3.26T1 1008 - 2013.3.28T1 1009 - 2013.3.28T1 $$$  ^^^ Friends :: Emma :: 601 - 2013.3.22T1 602 - 2013.3.22T1 603 - 2013.3.22T1 604 - 2013.3.22T1 605 - 2013.3.22T1 606 - 2013.3.22T1 607 - 2013.3.22T1 608 - 2013.3.22T1 609 - 2013.3.22T1 610 - 2013.3.22T1 611 - 2013.3.22T1 612 - 2013.3.22T1 $$$";
  var testValue = "^^^ MST3K 101 - 2013.2.6T1, 2013.6.24R 102 - 2013.2.6T1 103 - 2013.2.7T1 104 - 2013.2.7T1 105 - 2013.2.8T1 106 - 2013.2.8T1 107 - 2013.2.11T1, 2013.7.1Q 108 - 2013.2.11T1, 2013.6.7Q, 2013.7.10R 109 - 2013.2.11T1 110 - 2013.2.11T1 111 - 2013.2.12T1, 2013.6.27Q 112 - 2013.2.12T1 113 - 2013.2.12T1 201 - 2013.2.13T1, 2013.6.25R 202 - 2013.2.13T1 203 - 2013.2.13T1 204 - 2013.2.14T1, 2013.6.13R 205 - 2013.2.14T1, 2013.6.28R 206 - 2013.2.15T1 207 - 2013.2.19T1, 2013.2.25Q, 2013.5.2Q 208 - 2013.2.19T1, 2013.4.1R 209 - 2013.2.19T1 210 - 2013.2.20T1, 2013.6.3R 211 - 2013.2.20T1 212 - 2013.2.22T1, 2013.3.15Q 213 - 2013.2.25T1 301 - 2013.2.22Q, 2013.2.27T1, 2013.6.14R 302 - 2013.2.27T1, 2013.6.4Q 303 - 2013.2.27T1, 2013.6.17Q 304 - 2013.2.27T1, 2013.6.3R 305 - 2013.3.1T1 306 - 2013.3.1T1, 2013.6.26R 307 - 2013.2.15R, 2013.3.4T1 308 - 2013.3.4T1, 2013.6.5Q 309 - 2013.3.5T1, 2013.7.18Q 310 - 2013.3.6T1 311 - 2013.3.6T1, 2013.4.26R 312 - 2013.3.6T1, 2013.6.7R 313 - 2013.3.6T1, 2013.5.9R 314 - 2013.3.7T1, 2013.6.5Q, 2013.6.24R 315 - 2013.3.8T1, 2013.6.5R 316 - 2013.3.8T1, 2013.6.7Q, 2013.6.10Q 317 - 2013.2.11R, 2013.3.8T1 318 - 2013.3.11T1, 2013.6.26R 319 - 2013.3.11T1 320 - 2013.3.13T1 321 - 2013.3.13T1 322 - 2013.3.13T1 323 - 2013.3.14T1, 2013.6.3R 324 - 2013.3.14T1 401 - 2013.3.14T1 402 - 2013.3.15T1, 2013.6.21R 403 - 2013.3.15T1 404 - 2013.3.18T1, 2013.6.24Q 405 - 2013.3.18T1, 2013.6.14Q, 2013.6.21R 406 - 2013.3.18T1 407 - 2013.3.21T1, 2013.5.30Q, 2013.6.14Q 408 - 2013.3.22T1 409 - 2013.3.22T1 410 - 2013.3.22T1, 2013.7.11R 411 - 2013.3.22T1 412 - 2013.3.25T1 413 - 2013.3.25T1, 2013.6.18Q 414 - 2013.3.25T1, 2013.7.15R 415 - 2013.3.4R, 2013.3.26T1 416 - 2013.3.26T1, 2013.7.8R 417 - 2013.3.26T1, 2013.7.8R 418 - 2013.3.27T1, 2013.5.16Q, 2013.6.27R 419 - 2013.3.27T1 420 - 2013.3.27T1, 2013.6.19Q 421 - 2013.2.26R, 2013.3.28T1 422 - 2013.3.28T1, 2013.5.9R 423 - 2013.3.29T1 424 - 2013.3.29T1, 2013.6.6R 501 - 2013.3.29T1, 2013.7.3Q 502 - 2013.3.29T1 503 - 2013.4.1T1 504 - 2013.4.2T1 505 - 2013.4.2T1 506 - 2013.4.3T1, 2013.6.13R, 2013.7.16R 507 - 2013.4.3T1 508 - 2013.4.4T1, 2013.7.9R 509 - 2013.4.5T1 510 - 2013.4.5T1 511 - 2013.4.5T1, 2013.7.17R 512 - 2013.4.8T1, 2013.7.15R 513 - 2013.4.8T1, 2013.6.11R 514 - 2013.4.8T1, 2013.6.12Q 515 - 2013.3.19R, 2013.4.8T1, 2013.7.2Q 516 - 2013.4.9T1 517 - 2013.4.5R, 2013.4.9T1 518 - 2013.4.9T1 519 - 2013.4.10T1 520 - 2013.4.10T1, 2013.7.11R 521 - 2013.4.11T1 522 - 2013.4.11T1 523 - 2013.4.12T1 524 - 2013.4.12T1, 2013.5.14Q 601 - 2013.4.12T1, 2013.6.18R 602 - 2013.4.12T1 603 - 2013.2.25R, 2013.4.15T1 604 - 2013.3.20R, 2013.4.15T1 605 - 2013.4.15T1 606 - 2013.2.25R, 2013.4.15T1, 2013.5.30R, 2013.7.9Q 607 - 2013.4.16T1, 2013.5.30Q 608 - 2013.4.16T1 609 - 2013.4.16T1, 2013.7.1R 610 - 2013.4.16T1 611 - 2013.4.17T1 612 - 2013.2.20Q, 2013.4.17T1, 2013.6.19R 613 - 2013.2.12R, 2013.4.17T1 614 - 2013.4.18T1 615 - 2013.4.19T1 616 - 2013.4.19T1, 2013.6.17R, 2013.6.19Q, 2013.7.3Q 617 - 2013.4.19T1 618 - 2013.4.22T1 619 - 2013.3.19R, 2013.4.22T1 620 - 2013.4.22T1 621 - 2013.4.22T1 622 - 2013.4.23T1, 2013.5.29Q 623 - 2013.2.4R, 2013.4.23T1 624 - 2013.4.23T1, 2013.7.10R M01 - 2013.4.24T1, 2013.4.26Q, 2013.5.25Q 701 - 2013.4.24T1 702 - 2013.4.25T1 703 - 2013.4.25T1, 2013.7.1R, 2013.7.8R 704 - 2013.4.25T1 705 - 2013.4.25T1, 2013.6.25R 706 - 2013.4.26T1, 2013.7.15R 801 - 2013.4.26T1 802 - 2013.3.31R, 2013.4.29T1 803 - 2013.4.29T1, 2013.7.15R 804 - 2013.4.29T1 805 - 2013.3.20R, 2013.4.29T1 806 - 2013.4.29T1 807 - 2013.4.30T1 808 - 2013.4.30T1 809 - 2013.4.30T1 810 - 2013.4.30T1 811 - 2013.5.1T1, 2013.6.6R 812 - 2013.3.4R, 2013.5.1T1, 2013.6.20R 813 - 2013.5.1T1 814 - 2013.5.2T1, 2013.6.28R 815 - 2013.5.2T1 816 - 2013.5.3T1, 2013.6.20R 817 - 2013.3.29Q, 2013.5.3T1, 2013.5.22R 818 - 2013.5.3T1 819 - 2013.5.6T1, 2013.5.9Q, 2013.6.21Q, 2013.7.18Q 820 - 2013.4.1Q, 2013.5.6T1 821 - 2013.3.20R, 2013.5.6T1 822 - 2013.4.19R, 2013.5.6T1 901 - 2013.5.7T1 902 - 2013.5.7T1 903 - 2013.3.20R, 2013.5.8T1 904 - 2013.4.19R, 2013.5.8T1 905 - 2013.5.10T1 906 - 2013.5.10T1, 2013.7.17Q 907 - 2013.5.10T1, 2013.7.8Q 908 - 2013.5.13T1 909 - 2013.5.13T1, 2013.6.25R 910 - 2013.5.13T1 911 - 2013.5.13T1 912 - 2013.3.15Q, 2013.5.14T1, 2013.5.31Q 913 - 2013.2.22R, 2013.5.14T1 1001 - 2013.5.15T1, 2013.6.26R 1002 - 2013.5.15T1 1003 - 2013.5.15T1 1004 - 2013.5.15T1, 2013.6.9Q 1005 - 2013.2.13R, 2013.5.16T1, 2013.6.19Q 1006 - 2013.5.16T1 1007 - 2013.5.16T1, 2013.7.12R 1008 - 2013.5.16T1, 2013.7.16R 1009 - 2013.5.20T1 1010 - 2013.5.20T1 1011 - 2013.2.15R, 2013.5.20T1, 2013.7.12R 1012 - 2013.5.20T1, 2013.6.13R 1013 - 2013.5.22T1 $$$";
}

function testParseShowRecords(console) {
  var records = parseShowRecords(testValue);
  $$.each(records, function(record) {
    console.log(record.getShows().join(",") + ": " + record.nWatches()
      + ", BTW's: " + record.btws().join(","));
  });
  return records;
}

function testWatchRecordToJson(console) {
  var records = testParseShowRecords(console);
  var mst3k = records[0];
  var watches = mst3k.getWatchesJson();
  console.log(watches);
  return mst3k;
}

if (node) {
    module.exports = {
        parseShowRecords: parseShowRecords,
        testParseShowRecords: testParseShowRecords,
        testWatchRecordToJson: testWatchRecordToJson,

        test: function(console) {
            testMstViz(console);
            testParseShowRecords(console);
        }
    };
}


